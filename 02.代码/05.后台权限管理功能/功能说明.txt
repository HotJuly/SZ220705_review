后台管理系统中权限划分:
    1.管理员
        具有当前项目所有模块的访问权限,和所有功能的使用权限

    2.访客
        具有当前项目部分模块的访问权限,和部分功能的使用权限

完整的一套权限管理系统:路由级别权限管理和按钮级别权限管理

路由级别权限管理功能
    管理控制用户能够使用哪些模块

按钮级别权限管理功能
    管理用户在一个模块中,能够使用哪些功能

需求:根据当前账号权限,控制用户能够访问的路由
拆解:
    1.根据当前账号权限
        通过login接口,可以将用户输入的帐号和密码,兑换成用户个人的唯一标识token数据
        通过info接口,可以将用户的token数据,兑换成用户个人信息

            buttons->   这个数组存储的字符串,代表当前用户有几个使用哪些功能
                他的用处是用来做按钮级别权限管理的

            routes->    这个数组存储的字符串,代表当前用户能够访问哪些路由
                他的用处是用来做路由级别权限管理的

                以上两个的数据类型都是  Array<string>

    2.控制用户能够访问的路由
        公司中常用方法有两种:
            1.使用导航守卫,控制用户能否跳转某个路由
            2.直接将部分路由不进行注册,用户就无法访问
                需要额外的操作:根据权限信息,动态注册路由
                    防止当前管理员帐号,无法访问没有注册的路由

                动态注册路由的API
                    1.router.addRoute(routeObj)
                    2.router.addRoutes(Array<routeObj>)


    流程:
        1.将所有的路由进行类型划分
            分为三种,常量路由,异步路由和任意路由

        2.到达发送info请求的地方(Vuex),将用户信息中的buttons和routes进行保存

        3.根据路由别名数组以及流程1中切割的异步路由数组,过滤得到当前账号能够访问的异步路由数组

        4.使用router.addRoutes语法,将流程3中处理得到的异步路由数组进行动态注册

    出现的BUG:
        1.左侧列表动态显示问题
            问题:根本原因是因为该组件是通过遍历$router.options.routes数组得到的
                但是我们在项目初始化的时候,只会传入常量路由,所以展示效果会有缺失

            解决方法:重新整理一个数组menuList,内部存放所有能够访问的路由对象
                让左侧列表组件使用menuList显示即可

        2.每次切换账号,路由个数越来越少
            问题:每次登陆帐号之后都会使用上一次过滤玩的asyncRoutes数组进行再次过滤
                所以只可能越来越少

            解决方法:在每次过滤异步路由的时候,不要修改原先的asyncRoutes数组,每次都进行深拷贝操作